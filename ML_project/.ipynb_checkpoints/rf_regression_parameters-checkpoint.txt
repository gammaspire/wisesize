df_path                           /Desktop/ML_features.csv   #path to pandas dataframe (.csv), if any, with features+classes

feature_path_SigmaM               /Desktop/SigmaMnames.npy   #path to numpy file containing all Sigma_M feature column names
feature_path_Sigmak               /Desktop/Sigmaknames.npy   #see above; for Sigma_k column names

n_trees                           200                   #Number of decision trees for creating the random forest model.

max_depth                         15                    #hyperparameter for random trees model; governs max number of "splits"
                                                        #a decision tree can make

test_size                         0.20                   #Defines the fraction of the sample the model will use as test data



force_features_list               ['log_Sigma_M1','log_Sigma_M2','log_Sigma_M7','log_Sigma_M8','log_Sigma_M17','ratio_SigmaM_1']
                                                   
                                                   #force the model to use the features given in this list!
                                                   #this set of features will be used in place of the full feature set,
                                                   #including for when running the optimization code when use_optimal_features=1
                                                   #use [] (empty list) to default to all features! 
                                                   #features must be comma-separated, NO SPACES!
                                                   #EXAMPLE: [Sigma_M4,Sigma_M5,ratio_SigmaM_1,Sigma_ngal_2]




logM200_threshold                 11.5                  #log(M200) regression 'threshold', determines value above which the
                                                        #model will flag galaxies for test/train data; 0 for "no threshold"

correlation_threshold             0.90                 #Correlation threshold (for PCA).

use_pca                           0                 #Use PCA to reduce feature dimensionality. 0 for False, 1 for True


use_optimal_features              0                 #Iterate over model to find optimal features set. 0 for False, 1 for True


threshold_width                   0.70                #68% confidence interval width threshold at or above which the ML's 
                                                    #predictive power is unreliable (68% CI -- value is within the shaded
                                                    #width 68% of the time). units are dex.

bin_width                         0.30              #predicted log(M200) bin size within which distribution of y_true 
                                                    #is evaluated. units are dex.